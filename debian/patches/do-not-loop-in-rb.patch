From 8f975805851603697973eb66e63b69e89d8582c0 Mon Sep 17 00:00:00 2001
From: Mikhail Gusarov <dottedmag@dottedmag.net>
Date: Tue, 2 Sep 2014 19:03:23 +0200
Subject: [PATCH] Do not loop endlessly if removal of bucket content fails

Only remove contents from bucket once and then stop if
bucket cannot be removed due to some reason.

Debian bug: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=750561
---
 s3cmd | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

Index: s3cmd/s3cmd
===================================================================
--- s3cmd.orig/s3cmd	2015-03-18 11:54:58.102555218 +0100
+++ s3cmd/s3cmd	2015-03-18 11:54:58.102555218 +0100
@@ -279,7 +279,7 @@
     return EX_OK
 
 def cmd_bucket_delete(args):
-    def _bucket_delete_one(uri):
+    def _bucket_delete_one(uri, retry=True):
         try:
             response = s3.bucket_delete(uri.bucket())
             output(u"Bucket '%s' removed" % uri.uri())
@@ -289,11 +289,11 @@
                     return EX_OK
                 else:
                     return EX_USAGE
-            if e.info['Code'] == 'BucketNotEmpty' and (cfg.force or cfg.recursive):
+            if e.info['Code'] == 'BucketNotEmpty' and retry and (cfg.force or cfg.recursive):
                 warning(u"Bucket is not empty. Removing all the objects from it first. This may take some time...")
                 rc = subcmd_batch_del(uri_str = uri.uri())
                 if rc == EX_OK:
-                    return _bucket_delete_one(uri)
+                    return _bucket_delete_one(uri, False)
                 else:
                     output(u"Bucket was not removed")
             elif S3.codes.has_key(e.info["Code"]):
